#!/usr/bin/env perl
use strict;
use warnings;

my $maindir = $ARGV[0] or die;
my %hdefs;
my @adefs;
my @units;
my %hasmain;

sub scandir {
	my $dir = shift;
	my @cfiles;
	my @files = glob($dir . "/*");
	for(@files) {
		my $ext = substr($_, -2);
		if($ext eq ".c" || $ext eq ".h") {
			my $f;
			my $fn = $_;
			open($f, "<", $_);
			while(<$f>) {
				if((/\s*#if[n]{0,1}def ([\w_]+)/ || /\s*#if\s+\(\s+[\(]{0,1}\s*defined\s+\)\s*[\)]{0,1}\s*([\w_]+)/)) {
					my $def = $1;
					next if ($def =~ /_H_$/ || $def =~ /_H$/) && $def !~ /^HAVE_/;
					if(!defined($hdefs{$def})) {
						$hdefs{$def} = 1;
						push @adefs, $def;
					}
				} elsif (/^\s*(int){0,1}(void]){0,1}\s+main\s*\(/) {
					$hasmain{$fn} = 1;
				}
			}
			close($f);
			if($ext eq ".c") {
				push @cfiles, $fn;
			}
		} elsif (-d $_) {
			scandir($_);
		}
	}
	push @units, \@cfiles if(@cfiles);
}

sub gettarget {
	my $c = shift;
	my @a = split /\//, $c;
	my $x;
	for(@a) {
		next if $_ eq ".";
		$x = $_;
		last;
	}
	$x = "root" unless defined $x;
	return $x;
}

scandir($maindir);

my $cfg;
open($cfg, ">", "config.mak");
my @adefs2 = sort {$a cmp $b} @adefs;
for(@adefs2) {
	print { $cfg } "#CFLAGS+=-D" . $_ . "\n";
}
close($cfg);

my $h = "#Makefile autogenerated by rofl0rs makefilegen\n\n-include config.mak\n\nall: ";
my $f = "\n.PHONY: ";

my $mak;
my %sections;
my %sectionfiles;
open($mak, ">", "Makefile");
print { $mak } $h;
for(@units) {
	for my $c(@$_) {
		my $trg = gettarget($c);
		if(!defined($sections{$trg})) {
			$sectionfiles{$trg} = [];
			print {$mak} $trg , " ";
			$sections{$trg} = 1;
		}
		my $secaref = $sectionfiles{$trg};
		push @$secaref, $c;
	}
}


print { $mak } "\n\n";
for(keys %sectionfiles) {
	my $allo = "";
	my @mains;
	my $secname = $_;
	print { $mak } $secname, ":\n";
	$f .= $secname . " ";
	my $secaref = $sectionfiles{$secname};
	for(@$secaref) {
		push @mains, $_ if defined($hasmain{$_});
		my $bn = substr($_, 0, -2);
		$allo .= $bn . ".o ";
		print { $mak } "\t" . '${CC} -c ' . $bn . '.c ${CFLAGS} -o ' . $bn . ".o\n";
	}
	if(@mains) {
		for(@mains) {
			my $bn = substr($_, 0, -2);
			print { $mak } "\t" . '${CC} ' . $allo . ' ${CFLAGS} -o ' . $bn . ".out\n";
		}
	} else {
		print { $mak } "\t" . 'ar rcs lib' . $secname . ".a " . $allo . "\n";
	}
	print { $mak } "\n";
}
print { $mak } $f, "\n";
close($mak);

